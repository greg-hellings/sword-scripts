pipeline {
	agent any
	parameters {
		string(name: 'VERSION', description: 'The SVN version to checkout')
	}
	environment {
		TAG_BASE = env.VERSION.replaceAll("\\.", "-")
		TAG = "sword-${TAG_BASE}"
		urlBase = "https://www.crosswire.org/svn/sword/tags/${TAG}"
		targetDirectory = "sword-${VERSION}"
	}

	stages {
		stage("Export") {
			steps {
				cleanWs()
				sh "svn export '${urlBase}' '${targetDirectory}'"
				sh "cd '${targetDirectory}/scripts' && ./mkswordtar"
				stash name: "build", includes: "${targetDirectory}.tar.gz"
			}
		}

		stage("Build test") {
			parallel {
				stage("autotools") {
					agent any
					environment {
						FLAVOR = "autotools"
					}
					steps {
						cleanWs()
						unstash "build"
						sh "tar xaf ${targetDirectory}.tar.gz"
						dir(targetDirectory) {
							sh "${WORKSPACE}/sword-scripts/scripts/autobuild.sh"
						}
					}
				}
				stage("CMake") {
					agent any
					environment {
						FLAVOR = "cmake"
					}
					steps {
						cleanWs()
						unstash "build"
						sh "tar xaf ${targetDirectory}.tar.gz"
						dir(targetDirectory) {
							sh "${WORKSPACE}/sword-scripts/scripts/cmake.sh"
						}
					}
				}
			}
		}

		stage("Deploy artifact") {
			steps {
				cleanWs()
				unstash "build"
				archiveArtifacts "${targetDirectory}.tar.gz"
			}
		}
	}
}
